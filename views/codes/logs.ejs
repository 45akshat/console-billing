<!DOCTYPE html>
<html>
<head>
  <title>Coupons Dashboard</title>
  <style>
    body {
      font-family: 'Roboto', Arial, sans-serif;
      background: #f9fafc;
      margin: 0;
      padding: 0;
      color: #2c3e50;
    }

    h1 {
      text-align: center;
      margin: 40px 0 20px;
      font-size: 28px;
      font-weight: 500;
      color: #1a202c;
    }

    #search {
      display: block;
      margin: 0 auto 25px;
      padding: 12px 16px;
      width: 50%;
      font-size: 15px;
      border: 1px solid #d1d5db;
      border-radius: 8px;
      outline: none;
      transition: all 0.2s ease;
      background: #fff;
      box-shadow: 0 1px 2px rgba(0,0,0,0.05);
    }

    #search:focus {
      border-color: #3f51b5;
      box-shadow: 0 0 0 3px rgba(63,81,181,0.15);
    }

    .table-container {
      width: 95%;
      margin: 0 auto;
      overflow-x: auto;
    }

    table {
      border-collapse: separate;
      border-spacing: 0;
      width: 100%;
      background: #fff;
      border-radius: 12px;
      overflow: hidden;
      box-shadow: 0 2px 8px rgba(0,0,0,0.08);
      min-width: 800px;
    }

    th, td {
      padding: 12px 8px;
      text-align: center;
      font-size: 12px;
      border-bottom: 1px solid #e5e7eb;
    }

    th {
      background-color: #3f51b5;
      color: white;
      font-weight: 500;
      text-transform: uppercase;
      font-size: 11px;
      letter-spacing: 0.5px;
      position: sticky;
      top: 0;
      z-index: 10;
    }

    .user-id-col {
      background-color: #5c6bc0 !important;
      font-weight: 600;
    }

    .total-col {
      background-color: #e91e63 !important;
      font-weight: 600;
    }

    tr:last-child td {
      border-bottom: none;
    }

    tr:nth-child(even) {
      background-color: #fafbff;
    }

    tr:hover {
      background-color: #f1f5ff;
      transition: background 0.2s ease;
    }

    .count-cell {
      font-weight: 600;
      color: #2c3e50;
    }

    .zero-count {
      color: #94a3b8;
      font-weight: 400;
    }

    #pagination {
      text-align: center;
      margin: 25px 0;
    }

    #pagination button {
      margin: 0 8px;
      padding: 8px 18px;
      border: none;
      border-radius: 6px;
      background: #3f51b5;
      color: white;
      font-size: 14px;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.2s ease;
    }

    #pagination button:hover:not(:disabled) {
      background: #303f9f;
      box-shadow: 0 2px 6px rgba(0,0,0,0.2);
    }

    #pagination button:disabled {
      background: #c5cae9;
      cursor: not-allowed;
    }

    .stats {
      text-align: center;
      margin: 20px 0;
      font-size: 14px;
      color: #64748b;
    }

    /* Mobile-friendly */
    @media (max-width: 768px) {
      #search {
        width: 80%;
      }
      .table-container {
        width: 100%;
        padding: 0 10px;
      }
      table {
        font-size: 10px;
        min-width: 600px;
      }
      th, td {
        padding: 8px 4px;
      }
    }
  </style>
</head>
<body>
  <h1>Coupons Monitoring</h1>

  <!-- Search Bar -->
  <input type="text" id="search" placeholder="🔍 Search by User ID...">

  <div class="stats" id="stats"></div>

  <div class="table-container">
    <table id="codesTable">
      <thead id="tableHead">
        <!-- Headers injected by JS -->
      </thead>
      <tbody id="tableBody">
        <!-- Rows injected by JS -->
      </tbody>
    </table>
  </div>

  <!-- Pagination Controls -->
  <div id="pagination"></div>

  <script>
    // Sample data - replace this with your actual data
    const allCodes = <%- JSON.stringify(codes) %>;

    // Define all possible reward types
    const rewardTypes = [
      "Pay for 4 get 5 hours", 
      "15% off PC & PS", 
      "15 Mins",
      "30 Mins",
      "1 Hour",
      "Pay for 2 get 3 hours",
      "Buy 4 Get 1",
      "1 Day",
      "50% off on PS",
      "25% off"
    ];

    const rowsPerPage = 10;
    let currentPage = 1;
    let filteredData = [];

    const tableHead = document.getElementById('tableHead');
    const tableBody = document.getElementById('tableBody');
    const paginationDiv = document.getElementById('pagination');
    const searchInput = document.getElementById('search');
    const statsDiv = document.getElementById('stats');

    function processData() {
      // Group data by UserID
      const groupedData = {};
      
      allCodes.forEach(code => {
        if (!groupedData[code.UserID]) {
          groupedData[code.UserID] = {};
          rewardTypes.forEach(reward => {
            groupedData[code.UserID][reward] = 0;
          });
          groupedData[code.UserID].total = 0;
        }
        
        if (rewardTypes.includes(code.Reward)) {
          groupedData[code.UserID][code.Reward]++;
          groupedData[code.UserID].total++;
        }
      });

      // Convert to array format for easier handling
      return Object.keys(groupedData).map(userID => ({
        UserID: userID,
        ...groupedData[userID]
      }));
    }

    function createTableHeaders() {
      tableHead.innerHTML = '';
      const headerRow = document.createElement('tr');
      
      // User ID header
      const userIdHeader = document.createElement('th');
      userIdHeader.textContent = 'User ID';
      userIdHeader.className = 'user-id-col';
      headerRow.appendChild(userIdHeader);
      
      // Reward type headers
      rewardTypes.forEach(reward => {
        const th = document.createElement('th');
        th.textContent = reward;
        th.style.fontSize = '10px';
        th.style.padding = '12px 6px';
        headerRow.appendChild(th);
      });
      
      // Total header
      const totalHeader = document.createElement('th');
      totalHeader.textContent = 'Total';
      totalHeader.className = 'total-col';
      headerRow.appendChild(totalHeader);
      
      tableHead.appendChild(headerRow);
    }

    function renderTable(data, page = 1) {
      tableBody.innerHTML = '';
      const start = (page - 1) * rowsPerPage;
      const end = start + rowsPerPage;
      const pageData = data.slice(start, end);

      if (pageData.length === 0) {
        const row = document.createElement('tr');
        row.innerHTML = `<td colspan="${rewardTypes.length + 2}">No users found</td>`;
        tableBody.appendChild(row);
        return;
      }

      pageData.forEach(user => {
        const row = document.createElement('tr');
        
        // User ID cell
        const userIdCell = document.createElement('td');
        userIdCell.textContent = user.UserID;
        userIdCell.className = 'user-id-col';
        userIdCell.style.fontWeight = '600';
        row.appendChild(userIdCell);
        
        // Reward count cells
        rewardTypes.forEach(reward => {
          const td = document.createElement('td');
          const count = user[reward] || 0;
          td.textContent = count;
          td.className = count > 0 ? 'count-cell' : 'zero-count';
          td.style.padding = '12px 6px';
          row.appendChild(td);
        });
        
        // Total cell
        const totalCell = document.createElement('td');
        totalCell.textContent = user.total;
        totalCell.className = 'total-col';
        totalCell.style.fontWeight = '600';
        totalCell.style.backgroundColor = '#fce4ec';
        row.appendChild(totalCell);
        
        tableBody.appendChild(row);
      });
    }

    function renderPagination(data) {
      paginationDiv.innerHTML = '';
      const totalPages = Math.ceil(data.length / rowsPerPage);

      if (totalPages <= 1) return;

      const prevBtn = document.createElement('button');
      prevBtn.innerText = '⟵ Prev';
      prevBtn.disabled = currentPage === 1;
      prevBtn.onclick = () => {
        if (currentPage > 1) {
          currentPage--;
          renderTable(filteredData, currentPage);
          renderPagination(filteredData);
        }
      };
      paginationDiv.appendChild(prevBtn);

      // Page info
      const pageInfo = document.createElement('span');
      pageInfo.textContent = `Page ${currentPage} of ${totalPages}`;
      pageInfo.style.margin = '0 15px';
      pageInfo.style.color = '#64748b';
      paginationDiv.appendChild(pageInfo);

      const nextBtn = document.createElement('button');
      nextBtn.innerText = 'Next ⟶';
      nextBtn.disabled = currentPage === totalPages;
      nextBtn.onclick = () => {
        if (currentPage < totalPages) {
          currentPage++;
          renderTable(filteredData, currentPage);
          renderPagination(filteredData);
        }
      };
      paginationDiv.appendChild(nextBtn);
    }

    function updateStats(data) {
      const totalUsers = data.length;
      const totalCoupons = data.reduce((sum, user) => sum + user.total, 0);
      statsDiv.textContent = `${totalCoupons} total coupons`;
    }

searchInput.addEventListener('input', () => {
  const query = searchInput.value.toLowerCase();
  const processedData = processData();

  // Sort again after search
  const searchedData = processedData
    .filter(user => user.UserID.toLowerCase().includes(query))
    .sort((a, b) => b.total - a.total);

  filteredData = searchedData;
  currentPage = 1;
  renderTable(filteredData, currentPage);
  renderPagination(filteredData);
  updateStats(filteredData);
});



function init() {
  const processedData = processData();

  // Sort by total coupons (descending)
  processedData.sort((a, b) => b.total - a.total);

  filteredData = processedData;
  createTableHeaders();
  renderTable(filteredData, currentPage);
  renderPagination(filteredData);
  updateStats(filteredData);
}


    init();
  </script>
</body>
</html>